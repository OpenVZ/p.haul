#!/usr/bin/env python

import sys
import argparse
import logging
import phaul.p_haul_iters as ph_iters
import phaul.images as ph_images
import phaul.criu_api as ph_criu_api
import phaul.xem_rpc as ph_xem_rpc

# Usage idea
# p.haul <type> <id> <destination>
#
# E.g.
#
# # p.haul vz 100 10.0.0.1
#
# or
#
# # p.haul lxc myct 10.0.0.2
#

parser = argparse.ArgumentParser("Process HAULer")
parser.add_argument("type", help="Type of hat to haul, e.g. vz or lxc")
parser.add_argument("id", help="ID of what to haul")
parser.add_argument("to", help="IP where to haul")
parser.add_argument("-v", help="Verbosity level", default=ph_criu_api.def_verb, type=int, dest="verbose")
parser.add_argument("--keep-images", help="Keep images after migration", default=False, action='store_true')
parser.add_argument("--dst-rpid", help="Write pidfile on restore", default=None)
parser.add_argument("--img-path", help="Dirctory where to put images", default=ph_images.def_path)
parser.add_argument("--pid-root", help="Path to tree's FS root")
parser.add_argument("--force", help="Don't do any sanity (CPU compat) checks", default=False, action='store_true')
parser.add_argument("--port", help="Port where to haul", type=int, default=ph_xem_rpc.rpc_port)
parser.add_argument("--log-file", help="Write logging messages to specified file")

args = parser.parse_args()

# Configure logging
logging.basicConfig(filename=args.log_file, filemode="w", level=logging.INFO,
	format="%(asctime)s.%(msecs)03d: %(message)s", datefmt="%H:%M:%S")

# Setup hook to log uncaught exceptions
def log_uncaught_exception(type, value, traceback):
	logging.error(value, exc_info=(type, value, traceback))
sys.excepthook = log_uncaught_exception

args_dict = vars(args)
ph_type = (args_dict.pop("type"), args_dict.pop("id"))
dst = (args_dict.pop("to"), args_dict.pop("port"))

# Start the migration
worker = ph_iters.phaul_iter_worker(ph_type, dst)
worker.set_options(args_dict)
worker.start_migration()
