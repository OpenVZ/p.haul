#!/usr/bin/env python

import sys
import signal
import argparse
import logging
import phaul.xem_rpc as ph_xem_rpc
import phaul.p_haul_service as ph_srv

parser = argparse.ArgumentParser("Process HAULer service server")
parser.add_argument("--bind-addr", help="IP to bind to", type=str, default="0.0.0.0")
parser.add_argument("--bind-port", help="Port to bind to", type=int, default=ph_xem_rpc.rpc_port)
parser.add_argument("--log-file", help="Write logging messages to specified file")

args = parser.parse_args()

# Configure logging
logging.basicConfig(filename=args.log_file, filemode="w", level=logging.INFO,
	format="%(asctime)s.%(msecs)03d: %(message)s", datefmt="%H:%M:%S")

# Setup hook to log uncaught exceptions
def log_uncaught_exception(type, value, traceback):
	logging.error(value, exc_info=(type, value, traceback))
sys.excepthook = log_uncaught_exception

host = (args.bind_addr, args.bind_port)

sfd = None
def fin(foo, bar):
	print "Stop by %d" % foo
	sfd.close()

print "Starting p.haul rpyc service"
t = ph_xem_rpc.rpc_threaded_srv(ph_srv.phaul_service, host)

# FIXME: Setup stop handlers
sfd = t.get_stop_fd()
signal.signal(signal.SIGTERM, fin)
signal.signal(signal.SIGINT, fin)

t.start()
signal.pause()
t.join()
print "Bye!"
